{"version":3,"sources":["Good.js","GoodList.js","api.js","App.js","index.js"],"names":["Good","_ref","name","color","react_default","a","createElement","className","concat","GoodList","goods","map","good","key","id","src_Good","getGoods","fetch","then","response","json","FILTER_TYPES","App","state","currentGoods","error","loadGoods","filter","visibleGoods","regenerator_default","async","_context","prev","next","awrap","sent","t0","abrupt","_this","setState","t1","sort","b","localeCompare","splice","currentFilter","stop","_this2","this","_this$state","type","value","disabled","onClick","src_GoodList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4MAceA,SAXF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAT,OACXC,EAAAC,EAAAC,cAAA,QAAMC,UAAS,QAAAC,OAAUL,IACtBD,KCoBUO,EArBE,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,MAAH,OACfN,EAAAC,EAAAC,cAAA,UACGI,EAAMC,IAAI,SAAAC,GAAI,OACbR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,EAAKE,IACZV,EAAAC,EAAAC,cAACS,EAAD,CACEb,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,aCPTa,EAAW,kBACtBC,MAHE,yEAICC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UCAzBC,EAAe,CAAC,aAAc,qBAAsB,kBAoE3CC,6MAjEbC,MAAQ,CACNC,aAAc,GACdC,OAAO,KAGTC,UAAW,SAAMC,GAAN,IAAAjB,EAAAkB,EAAA,OAAAC,EAAAxB,EAAAyB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,EAAAxB,EAAA6B,MAIOlB,KAJP,OAIPN,EAJOqB,EAAAI,KAAAJ,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAM,OAAA,SAMAC,EAAKC,SAAS,CAAEd,OAAO,KANvB,OAAAM,EAAAS,GAWDb,EAXCI,EAAAE,KAYF,uBAZEF,EAAAS,GAAA,GAkBF,mBAlBET,EAAAS,GAAA,2BAaLZ,EAAelB,EAAM+B,KAAK,SAACpC,EAAGqC,GAAJ,OACxBrC,EAAEH,KAAKyC,cAAcD,EAAExC,QACtB0C,OAAO,EAAG,GAfRb,EAAAM,OAAA,2BAmBLT,EAAelB,EAAMiB,OAAO,SAAAf,GAAI,MAAmB,QAAfA,EAAKT,QAnBpC4B,EAAAM,OAAA,oBAuBLT,EAAelB,EAvBV,eAAAqB,EAAAM,OAAA,SA0BFC,EAAKC,SAAS,CACnBM,cAAelB,EACfH,aAAcI,KA5BP,yBAAAG,EAAAe,SAAA,4FAgCF,IAAAC,EAAAC,KAAAC,EACwCD,KAAKzB,MAA5CC,EADDyB,EACCzB,aAAcqB,EADfI,EACeJ,cAEtB,OAHOI,EAC8BxB,MAG5BrB,EAAAC,EAAAC,cAAA,uCAIPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,mBACCe,EAAaV,IAAI,SAAAgB,GAAM,OACtBvB,EAAAC,EAAAC,cAAA,UACEO,IAAKc,EACLuB,KAAK,SACLC,MAAOxB,EACPpB,UAAU,SACV6C,SAAUP,IAAkBlB,EAC5B0B,QAAS,kBAAMN,EAAKrB,UAAUC,KAE7BA,KAGLvB,EAAAC,EAAAC,cAACgD,EAAD,CAAU5C,MAAOc,YA5DP+B,IAAMC,WCHxBC,IAASC,OACPtD,EAAAC,EAAAC,cAACqD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.be44285f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Good = ({ name, color }) => (\n  <span className={`good_${color}`}>\n    {name}\n  </span>\n);\n\nGood.propTypes = {\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Good;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Good from './Good';\n\nconst GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id}>\n        <Good\n          name={good.name}\n          color={good.color}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default GoodList;\n","const API_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoods = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './App.css';\nimport GoodList from './GoodList';\nimport { getGoods } from './api';\n\nconst FILTER_TYPES = ['Load goods', 'Load 5 first goods', 'Load red goods'];\n\nclass App extends React.Component {\n  state = {\n    currentGoods: [],\n    error: false,\n  };\n\n  loadGoods= async(filter) => {\n    let goods;\n\n    try {\n      goods = await getGoods();\n    } catch (e) {\n      return this.setState({ error: true });\n    }\n\n    let visibleGoods;\n\n    switch (filter) {\n      case 'Load 5 first goods':\n        visibleGoods = goods.sort((a, b) => (\n          a.name.localeCompare(b.name)))\n          .splice(0, 5);\n        break;\n\n      case 'Load red goods':\n        visibleGoods = goods.filter(good => good.color === 'red');\n        break;\n\n      default:\n        visibleGoods = goods;\n    }\n\n    return this.setState({\n      currentFilter: filter,\n      currentGoods: visibleGoods,\n    });\n  };\n\n  render() {\n    const { currentGoods, currentFilter, error } = this.state;\n\n    if (error) {\n      return <p>Oops, something went wrong</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {FILTER_TYPES.map(filter => (\n          <button\n            key={filter}\n            type=\"button\"\n            value={filter}\n            className=\"button\"\n            disabled={currentFilter === filter}\n            onClick={() => this.loadGoods(filter)}\n          >\n            {filter}\n          </button>\n        ))}\n        <GoodList goods={currentGoods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}